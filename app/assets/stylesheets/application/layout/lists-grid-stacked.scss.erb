// lists-grid-stacked.scss.erb



//---------------
// Gridlist UL
// This UL aligns 1..n items in a visual grid. Each item is floated left and fills up available space 
// (20% width apiece). This UL is used extensively on browse content grids of content.

ul.list-grid {
	margin: 0px;
	padding: 0px;
  @include clearfix();
	
  > li {
	  list-style: none;
    float: left;
    min-width: 200px;
    width: 25%;
    margin: 0px 12px 18px 0px;
    min-height:88px;
    display: table;

    .cont {
      display: table-cell;
      vertical-align: top;
      padding: 0px;
      min-height: 64px;
      text-decoration:none;
      
      &.thumb-icon { width: 64px; }

      // these elements come along for the ride by bringing in gridlist-item mixin:
      b {
        color: $black;
      }
      
      .controls {
        display: block;
        margin-top: 4px;
      }

      h1 {
        font-size: 1.2em;
        color: #333;
        background:none;
        padding: 0px;
        margin: 0px;
        font-weight: bold;
        text-align: center;
      }
      
      p {
        margin-bottom: 0px;
      }


      
    }
    
    img {
      @extend .with-shadow;
      float: left;
      margin-bottom:6px;
      margin-right:10px;
    }

    i {
      margin-bottom: 6px;
      margin-right: 10px;
    }

  }

  // inset-selection gridlists appear inside forms and while they use 
  // the base styles of list-grid, several attributes are different
  // these gridlists are used to make a selection of one or more items
  // within them (hence their usage in forms)
  &.inset-selection {
    border-top: none;

    // a common use for inset gridlists is to have each item in the list-grid
    // be a clickable link - each item appears with a slight rounded 
    // border and is a fully clickable region

    > li {
      margin-right: 6px;
      margin-bottom: 6px;
    }

    > li {
      > a, > div {
        @include border-radius(4px);
        display: block;
        border: solid 1px $grayLight;
        color: $gray;
        $transition: border linear .1s, background linear .1s;
        @include transition($transition);
      }

      > a:hover {
        background: $concerto-blue-6;
        border: solid 1px $concerto-blue-2;
        text-decoration: none;

        .inp {
          background: $concerto-blue-4;
        }
      }
    }
    
    .inp {
      float: left;
      background: $grayLightest;
      min-height: 46px;
      padding: 8px 5px;
      @include border-radius(4px 0px 0px 4px);
    }

    .cont {
      border: none;
      float: left;
    }
  }

  // this class can be applied to a list-grid to compress the size of each
  // list item inside the grid
  &.small {
    > li {
      min-height: 60px;

      .cont {
        padding: 8px;
        min-height: 40px;
      }
    }

  }
}

// variant: for span columns that are small enough, override the 
// width to make it appear flush:
.row-fluid .span3 ul.list-grid > li, .row-fluid .span2 ul.list-grid > li, .row-fluid .span1 ul.list-grid > li {
  width: 100%;
}


//---------------
// Stacked lists UL
// An alternative to gridlists, this UL simply stacks its list items
// on top of one another with visual elements. It is often used for 
// nested lists, such as the feed list on contents#index.

ul.list-stacked {
  margin-left: 0px;

  > li {
    border-top: solid 1px $grayLighter;
    padding: 12px;

    // this is the second level of UL, which represents a nested list
    // we only recommend one level deep of visual nesting
    ul {
      margin-left: 0px;

      > li {
        padding-left: 25px;
        background: #efefef;
      }
    }

  }

  p {
    margin:0px;
  }
  
  .indented {
    padding-left: 20px;
  }
}
